# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: Deno

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v3

      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@9db7f66e8e16b5699a514448ce994936c63f0d54
        with:
          deno-version: v1.x

      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      # - name: Verify formatting
      #   run: deno fmt --check

      - name: Run linter
        run: deno lint

      - name: Run tests
        run: deno test -A
      - name: Setup Node.js environment

  uses: actions/setup-node@v2.5.2

  with:

    # Set always-auth in npmrc

    always-auth: # optional, default is false

    # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0

    node-version: # optional

    # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version

    node-version-file: # optional

    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.

    architecture: # optional

    # Set this option if you want the action to check for the latest available version that satisfies the version spec

    check-latest: # optional

    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN

    registry-url: # optional

    # Optional scope for authenticating against scoped registries

    scope: # optional

    # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.

    token: # optional, default is ${{ github.token }}

    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm

    cache: # optional

    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.

    cache-dependency-path: # optional

    # Deprecated. Use node-version instead. Will not be supported after October 1, 2019

    version: # optional
